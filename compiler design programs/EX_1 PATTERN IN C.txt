#include <stdio.h>
#include <ctype.h>
#include <string.h>
int main() {
    FILE *fi, *fo, *fop, *fk;
    int flag = 0, i = 1;
    char c, a[50], ch[50], file[50];
    printf("\nEnter the File Name: ");
    scanf("%s", file);
    fi = fopen(file, "r");
    if (!fi) {
        printf("Error opening input file.\n");
        return 1;
    }
    fo = fopen("inter.c", "w");
    if (!fo) {
        printf("Error creating intermediate file.\n");
        return 1;
    }
    while ((c = getc(fi)) != EOF) {
        if (isalpha(c) || isdigit(c) || c == '[' || c == ']' || c == '.') {
            fputc(c, fo);
        } else {
            if (c == '\n')
                fprintf(fo, "\t$\t");
            else
                fprintf(fo, "\t%c\t", c);
        }
    }
    fclose(fi);
    fclose(fo);
    fi = fopen("inter.c", "r");
    fop = fopen("oper.c", "r");
    fk = fopen("key.c", "r");
    if (!fi || !fop || !fk) {
        printf("Error opening intermediate or reference files.\n");
        return 1;
    }

    printf("\nLexical Analysis\n");
    fscanf(fi, "%s", a);
    printf("\nLine: %d\n", i++);

    while (!feof(fi)) {
        if (strcmp(a, "$") == 0) {
            printf("\nLine: %d\n", i++);
            fscanf(fi, "%s", a);
            continue;
        }
        flag = 0;
        rewind(fop);
        while (fscanf(fop, "%s", ch) != EOF) {
            if (strcmp(ch, a) == 0) {
                fscanf(fop, "%s", ch);
                printf("\t\t%s\t:\t%s\n", a, ch);
                flag = 1;
                break;
            }
        }
        if (!flag) {
            rewind(fk);
            while (fscanf(fk, "%s", ch) != EOF) {
                if (strcmp(ch, a) == 0) {
                    printf("\t\t%s\t:\tKeyword\n", a);
                    flag = 1;
                    break;
                }
            }
        }
        if (!flag) {
            if (isdigit(a[0]))
                printf("\t\t%s\t:\tConstant\n", a);
            else
                printf("\t\t%s\t:\tIdentifier\n", a);
        }

        fscanf(fi, "%s", a);
    }

    fclose(fi);
    fclose(fop);
    fclose(fk);

    return 0;
}
